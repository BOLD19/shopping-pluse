import React, { useState } from 'react';
import { motion } from 'framer-motion';

interface FlipCard {
  id: number;
  title: string;
  description: string;
  icon: string;
}

const cards: FlipCard[] = [
  {
    id: 1,
    title: "–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–∫—Ç–∏–≤",
    description: "–ì–æ—Ç–æ–≤—ã–π —Å–∞–π—Ç —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∫–æ—Ä–∑–∏–Ω–æ–π, —Ä–∞—Å—Å—Ä–æ—á–∫–æ–π, –¥–æ—Å—Ç–∞–≤–∫–æ–π. –ú–æ–∂–Ω–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –≤–Ω–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ —Ç–æ–≤–∞—Ä–∞—Ö, –±–µ–∑ –∑–∞—Ç—Ä–∞—Ç –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞.",
    icon: "üè™"
  },
  {
    id: 2,
    title: "–ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ —Ç–æ–≤–∞—Ä–æ–º",
    description: "–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π —Ç–æ–≤–∞—Ä ‚Äî –±–æ–ª—å—à–µ –Ω–∏–∫—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≤–∞—à–µ–π –∫–∞—Ä—Ç–æ—á–∫–µ, –¥–µ–º–ø–∏–Ω–≥–æ–≤–∞—Ç—å —Ü–µ–Ω—É –∏–ª–∏ –ø–æ—Ä—Ç–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥.",
    icon: "üéØ"
  },
  {
    id: 3,
    title: "–ë–æ–ª—å—à–µ –ø—Ä–∏–±—ã–ª–∏",
    description: "–í—ã –Ω–µ –ø–ª–∞—Ç–∏—Ç–µ –∫–æ–º–∏—Å—Å–∏—é –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—É ‚Äî –≤—Å–µ –¥–µ–Ω—å–≥–∏ –∏–¥—É—Ç –Ω–∞–ø—Ä—è–º—É—é –≤–∞–º, –±–µ–∑ 12% –ø–æ—Ç–µ—Ä—å –Ω–∞ –∫–∞–∂–¥–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.",
    icon: "üí∞"
  },
  {
    id: 4,
    title: "–ü—Ä–æ–¥–∞–∂–∏ –≤ —Ä–∞—Å—Å—Ä–æ—á–∫—É",
    description: "–¢–µ–ø–µ—Ä—å –≤—ã —Ä–µ—à–∞–µ—Ç–µ, –∫–æ–≥–¥–∞ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –ø–æ –∞–∫—Ü–∏–∏ 0-0-24, —Ö–æ—Ç—å –≤–µ—Å—å –≥–æ–¥.",
    icon: "üìÖ"
  },
  {
    id: 5,
    title: "–¢–µ–ø–ª–∞—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è",
    description: "–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∞–∫—Ü–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Å–≤–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤. –ü—Ä–æ–¥–∞–≤–∞–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –±–µ–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ —Ä–µ–∫–ª–∞–º—É.",
    icon: "üí¨"
  },
  {
    id: 6,
    title: "–ü–æ–ª–Ω–∞—è —Å–≤–æ–±–æ–¥–∞",
    description: "–ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –æ—Ç –ø–ª–æ—â–∞–¥–æ–∫. –í—ã —Å–∞–º–∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç–µ —Ü–µ–Ω—ã, –∞–∫—Ü–∏–∏ –∏ –¥–∏–∑–∞–π–Ω —Å–≤–æ–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞.",
    icon: "‚ú®"
  }
];

export const FlipCards: React.FC = () => {
  const [flippedCards, setFlippedCards] = useState<Set<number>>(new Set());

  const handleCardFlip = (cardId: number) => {
    setFlippedCards(prev => {
      const newSet = new Set(prev);
      if (newSet.has(cardId)) {
        newSet.delete(cardId);
      } else {
        newSet.add(cardId);
      }
      return newSet;
    });
  };

  return (
    <section className="py-12 lg:py-20 bg-white">
      <div className="mx-auto max-w-7xl px-6 lg:px-8">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl font-bold tracking-tight text-slate-900">
            –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ?
          </h2>
        </motion.div>

        {/* Cards Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {cards.map((card, index) => (
            <motion.div
              key={card.id}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: index * 0.1 }}
              viewport={{ once: true }}
              className="relative h-64 cursor-pointer"
              onClick={() => handleCardFlip(card.id)}
            >
              {/* Card Container */}
              <div className="relative w-full h-full transition-transform duration-500 transform-style-preserve-3d">
                {/* Front Side */}
                <div 
                  className={`absolute w-full h-full rounded-2xl p-6 flex flex-col items-center justify-center transition-all duration-500 ${
                    flippedCards.has(card.id) 
                      ? 'opacity-0 rotate-y-180' 
                      : 'opacity-100 rotate-y-0'
                  } bg-white shadow-lg border border-gray-100`}
                >
                  <div className="text-4xl mb-4">{card.icon}</div>
                  <h3 className="text-xl font-bold text-slate-800 text-center">
                    {card.title}
                  </h3>
                </div>

                {/* Back Side */}
                <div 
                  className={`absolute w-full h-full rounded-2xl p-6 flex flex-col items-center justify-center transition-all duration-500 ${
                    flippedCards.has(card.id) 
                      ? 'opacity-100 rotate-y-0' 
                      : 'opacity-0 -rotate-y-180'
                  } bg-blue-600 text-white shadow-lg`}
                >
                  <p className="text-sm leading-relaxed text-center">
                    {card.description}
                  </p>
                </div>
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
}; 